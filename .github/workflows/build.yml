name: Build, Test & Lint

on:
  push:
  pull_request:
  schedule:
    - cron: 0 4 * * 1

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get

      - run: dart test

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
    if: 'false'
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get

      - run: dart pub global activate coverage
      - name: Collect coverage
        run: dart pub run test_coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
    steps:
      - uses: actions/checkout@v2
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get

      - name: Run linter
        run: dartanalyzer . > analyze_report.txt
        continue-on-error: true

      - name: Install ruby
        uses: ruby/setup-ruby@v1
        if: github.event_name == 'pull_request'
        with:
          ruby-version: '2.7'
      - name: Install ruby gems
        run: |
          gem install bundler
          bundle install --without documentation
        if: github.event_name == 'pull_request'
      - name: Run danger on generated report
        uses: MeilCli/danger-action@v1
        if: github.event_name == 'pull_request'
        with:
          danger_file: Dangerfile
          danger_id: 'danger-pr'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.BOT_TOKEN }}
